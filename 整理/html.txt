HTML：网页超文本标记语言：
  1、HTML的基本概念
1.1 简介：
超文本标记语言，这是一款标记语言，本身不能直接显示在浏览器中，编辑语言经历浏览器的解释和编译，才能正确反映html标记语言的内容。
它不是一款编程语言，而是一款描述性语言，用于描述超文本内容的显示方式。比如文字的大小颜色等都是利用html标识显示的。最基本的语法是<标记符>内容</标记符>，结束标识只是在开始标识前面加一个/，当浏览器收到HTML文件时，就会解释里面的标记符，然后把标记符里面的内容打印出来。
<I>content</I>：会将content中的内容以斜体显示出来
<B>content</B>：会将content中的内容以粗体的形式显示出来
1.2 HTML基本文件结构：
<html>文件开始标识
<head>文件头开始的标识
……文件头的内容
</head>

<body>文件主体开始的标识
......文件主体的内容
</body>
</html>
1.3 认识HTML标识：
html是超文本标记语言，主要通过各种标记标示和排列各个对象，通常通过<与>与其中所包含的标记组成，在HTML中，各个标记都是成对存在的，结束标记总是比开始标记多一个"/"，标记与标记之间可以相互嵌套，还可以包含其他属性，在源文件中，标识是不区分大小写的。
HTML定义了以下三种标识：
<html>：放在文档的开头，用于描述页面的总体结构。
<head>：放在文档的起始部分，标明文档的头部信息，一般包括一个标题和主题信息，其结束标记</head>表示文档标题部分的结束。
<body>：文档主体区域，其结束标识</body>表示文档主体部分的结束。

一个完整的HTML必须包含三部分：
1、由<html></html>元素定义的版本信息
2、由<head></head>元素定义的文档头部信息
3、由<body></body>元素定义的文档内容主体讯息
<head>标题优于<body>标题出现。

1、HTML头部标题：
语法：<head>......</head>
说明：作用范围是整篇文档，里面可以由<meta>元信息定义、文档样式表定义和脚本信息等，定义在head中的内容往往不会在网站中显示。
2、标题标记title（一般用于说明页面的用途，显示在浏览器的标题栏，一般设置在<head></head>之间，以<title>开始，以</title>结束）：
语法：<title>.....</title>
说明：标题之间的内容就是title要显示的内容，可以帮助用户更好的识别页面，页面标题只有一个。
举例：
<html>
<head>
<meta http-equiv="content-type" context="text/html;charset=gb2312"/>
<title>标题标记</title>
</head>

<body>
</body>
</html>
3、元信息标记meta
meta里面的元素不会直接显示在页面上，一般定义页面信息的说明、关键字、刷新等。meta不需要设置结束标识，一个html中可以设置多个meta元素，meta元素的属性主要有name、http-equiv，其中name属性主要用于描述页面，以便搜索引擎查找分类。
  2.3.1 设置页面关键字
搜索引擎中信息都是输入关键字实现的，是网页登录优化的关键性一步，它是不可见的，可供搜索引擎使用。
语法：<meta name="keywords" content="输入具体的关键字"/>
其中：name为属性名称，content里面是具体的关键字
举例：
<html>
<head>
<meta name="keywords" content="插入关键字"/>
<title>请输入关键字</title>
</head>
<body>
<p>段落信息</p>
</body>
</html>
  2.3.2 设置页面说明
设置页面说明也是为了便于搜索引擎的查找，它用来详细说明网页的内容，页面说明在网页上不显示出来。
语法：<meta name="description" content="请插入页面说明"/>
  2.3.3 定义编译工具
源代码的头部可以设置网页编辑工具的名称。
语法：<meta name="generator" content="FrontPage"/>
  2.3.4 设置作者信息
在源码中还可以设置开发作者的信息
语法：<meta name="author" content="作者的姓名"/>
  2.3.5 设置网页文字与语言
设置语言的编码方式，这样浏览器就可以正确的选择语言
语法：<meta http-equiv="content-type" content="text/html; charset=字符集类型"/>
字符集类型主要有：
gb2312：简体中文
utf-8：	euc-jp：日语
  2.3.6 设置网页的自动跳转：
使用<meta>标识可以实现网页在经过一段时间后自动刷新，可通过将http-equiv设置为refresh来实现，content可设置为更新时间。
语法：<meta http-equiv="refresh" content="跳转的时间;url=跳转到的地址"/>
说明：refresh表示网页的刷新，content中设置跳转的时间，url中填写将要跳转的地址，时间地址之间以分号间隔，默认情况下跳转以秒为单位。
2.4 网页的主体标记body（里面的内容推荐使用CSS实现）
  2.4.1 网页的背景色bgcolor
大部分浏览器的背景默认颜色是白色或者灰色，在body中使用bgcolor可修改整个页面背景。
语法：<body bgcolor="十六进制颜色代码"></body>
说明：body是页面主体标识，bgcolor里面可以是一个已命名的颜色，也可以说一个十六进制颜色。
  2.4.2 网页的背景图片background
使用background可以将图片设为背景，使界面更加美观
语法：<body background="图片的地址">
说明：图片的地址可以是相对地址也可以是绝对地址，默认情况下，背景图片可以按照水平垂直的方式不断出现，直至铺满整个屏幕。
示例代码片段：
<body bgcolor="#03befc" background="D:/workspace/web/myTest/src/drawale/back.gif">
</body>
  2.4.3 网页的文字颜色text：
可以通过text对文字颜色进行修改，如果没有对文字颜色进行单独定义时，body中的修改对整个内容中的文字起作用。
语法：<body text="#f003fc">......</body>
说明：在该语法中，text的颜色设置值为十六进制颜色表示形式。
  2.4.4 网页的链接文字属性link
超链接是网页中最根本的元素，网站中的一个个网页是通过超链接的形式连接的，默认情况下，超链接的颜色以蓝色为主，访问过会变成暗红色，可以通过link参数修改链接的颜色。
语法：
<body link="#993300">
<a href="#">链接的文字</a>
</body>
说明：放在body里面，对没有单独定义的都起作用
alink可以设置正在访问的文字颜色，与link用法相似，vlink可以设置访问后的链接文字的颜色。
用法：
<body link="#993300" alink="#0066FF" vlink="#336600">
<a href="#">链接的文字</a>
</body>
  2.4.5 网页的边距margin
在网页中可以设置页面与浏览器边框的距离，包含左边距与右边距。
语法：<body topmargin=上边距的值 leftmargin=左边距的值>
   </body>
说明：默认边距值以像素为单位。
2.5 页面注释标记<!--  -->
语法：<!--注释的内容-->
说明：前半部分一个左尖括号，感叹号和两个连字符组成，后半部分由两个连字符和右尖括号

3.1 标题字
html包含各种级别的标题，各种级别由<h1>到<h6>元素来定义。其中<h1>级别是最高级，<h6>级别最低。
  3.1.1 标题字标识h
语法：<h1>一级标题</h1>			<h2>二级标题</h2>			<h3>三级标题</h3>		 
   <h4>四级标题</h4>			 <h5>五级标题</h5>			 <h6>六级标题</h6>
说明：一级标题使用最大字号，六级标题使用最小的字号。
  3.1.2 对齐属性align
默认标题文字是左对齐的，其他对齐方式需要使用align来设置。
语法：<align=对齐方式>
说明，align设置对齐方式需要设置在标题标记的后面，对齐方式详见下表
属性值 含义
left 左对齐
center 居中对齐
right 右对齐
3.2 文本基本标记font
font用于控制字体、字号、颜色等属性。
  3.2.1 字体属性face
face属性可以用于设置不同的显示字体，默认字体为宋体。
语法：
<font face="字体样式">......</font>
  3.2.2 字号属性size
可以通过<font>属性中的size来设置字体大小
语法：
<font size="文字字号">......</font>
说明：字体设置有两种方式：绝对和相对，默认字体大小3
绝对方式：字体大小设置绝对字号，由1到7数字，代表字体的绝对字号，字号越大字体越大
相对方式：从-4到+4的整数，字体相对于3号的放大缩小字号。
font属性可以用于文本、句子、单词、字母
  3.2.3 颜色属性color
可以通过<font>属性中的size来设置字体颜色
语法：
<font color="字体颜色">......</font>  
说明：
color属性来定义字体颜色，可以与其他属性共同配合修改字体的样式，各个属性之间没有先后顺序。
3.3 文本格式化标记（行内标记）
  3.3.1 粗体标记b、strong
在<b>与</b>、<strong></strong>间，文字都会显示为粗体，首尾必须包含，否则会从<b>开始都是粗体。这是HTML格式化粗体文本最基本的元素。
用法：
<b>加粗的文字</b>			<strong>加粗的字体</strong>
说明：
<b>与<strong>都可以对文本进行加粗，属于行内元素，可以插入到一段文本的任意部分。
  3.3.2 斜体标识i、em、cite
在<i></i>、<em></em>、<cite></cite>之间的内容都会显示为斜体，他们是格式化斜体最基本的元素。一般在一篇正文中的内容可以使用斜体进行强调或者区别的作用
用法：
<i>斜体文字</i>
<em>斜体文字</em>
<cite>斜体文字</cite>
  3.3.3 上标标记sup
原名superscript，在数学公式、日常计算应用、书籍文章注解甚至某些外语脚本都有广泛应用。<sup>属于行内元素，可以成对出现在一段文字的任意地方，并且允许嵌套使用。
用法：<sup>上标内容</sup>
说明：上标的效果可以用<sup>实现
  3.3.4 下标标记sub
原名subrscript，在数学公式、化学方程式都有广泛应用。<sub>属于行内元素，可以成对出现在一段文字的任意地方，并且允许嵌套使用。
用法：<sub>上标内容</sub>
说明：上标的效果可以用<sub>实现
  3.3.5 大字号标记big
big标记可用于增大文本中的字号，所包含的字号都会在原来字号上增加一级，如果多个Big作用于同一块文本，字体将逐级增大，也是一个行内元素。
用法：<big>大字号内容</big>
说明：里面的文本会在原有字号上增加一级。
 3.3.6 小字号标记small
small标记可用于减小文本中的字号，所包含的字号都会在原来字号上减小一级，如果多个small作用于同一块文本，字体将逐级减小，也是一个行内元素。
用法：<big>小字号内容</big>
说明：里面的文本会在原有字号上减小一级。
 3.3.7 下划线标记u
u主要用于需要添加下划线的文字，也是一个行内元素。
用法：<u>下划线内容</u>
说明：里面的文本会添加下划线。
PS：不建议使用，要实现效果可以用<style= "text-decoration:underline"/>代替
3.3.8 插入字标记ins
ins主要用于定义插入字标记
用法：<ins>插入字内容</ins>
效果：类似于加下划线(text-decoration:underline;)
3.3.9 删除字标记del
del主要用于定义删除字标记
用法：<del>删除字内容</del>
效果：类似于text-decoration:line-through;
3.4 段落标记
  3.4.1 段落标记p
用法：<p>段落文字</p>
说明：段落标记可以没有结束标记，每一个段落开始就意味着上个段落的结束，但是根据HTML5的要求，建议有结束标记。
  3.4.2 换行标记<br>
用法：<br>，不起另一段强制将文本换行
说明：一个<br>为一个换行符，连续多个标记可实现多次换行。 
  3.4.3 换行标记<nobr>
用法：<nobr>，不实现文本换行
说明：一个<nobr>为一个禁止换行符。
3.5 水平线：
  1.插入水平线：
<hr>代表水平分割线，会在浏览器中显示一条线。
  2.水平线宽度width
语法：<hr width="宽度">
说明：宽度是确定的像素值，也可以是窗口的百分比。
  3. 水平线高度size
语法：<hr size="高度">
说明：宽度是确定的像素值。
  4. 水平线去掉阴影：
语法：<hr noshade>
说明：noshade是布尔属性，没有属性值，加上浏览器不会显示立体的水平线，反之需要设置该属性，浏览器默认显示一条立体形状带有阴影的水平线。
注意：根据XHTML的要求，建议使用<hr noshade="noshade"/>,XHTML禁止使用缩写
  5. 水平线颜色color
语法：<hr color="颜色">
说明：颜色代码是十六进制的数值
实际网页中，水平线用于分割不同内容。
  6. 水平线排列align
默认水平线居中对齐，如需要使用左对齐或者右对齐，需要设置。
用法：<hr align="对齐方式">
说明：对齐方式有center、left、right
3.6 其他符号
符号 代码
空格 &nbsp；
“ &quot；
& &amp；
> &lt;
< &gt;
X &times;
™ &trade;
© &copy;
&emsp 制表符
3.7 引用和术语定义
标签 描述
<abbr> 定义缩写
<acronym> 定义首字母缩写
<address> 定义地址，通常以斜体显示
<bdo> 定义输出文字方向
<blockquote> 定义长的引用，会插入换行和外边距
<q> 定义短的引用语句，会插入""
3.8 计算代码元素
标签 描述
<code> 定义计算机代码文本
<kbd> 定义键盘文本
<samp> 定义计算机代码示例
<var> 定义变量
<pre> 定义预格式化文本
3.9 HTML注释
形式：<!-- 注释内容-->

4.1 图像的格式：
通常最常用的图像格式有三种：GIF、JPEG、PNG。其中GIF与JPEG的文件支持情况最好。PNG具有较高的灵活性并且文件较小，对于任何类型网页都适用。但是IE和Netscape Navigetor只支持部分PNG图像，为了满足大部分需求，推荐使用GIF与JPEG格式。
  1、GIF格式
图片交换格式，文件最多使用256种颜色，最适合显示色调不连续且大面积单一色调的图像，如导航条、按钮、图标、徽标等。
最大的优点是支持动态图像，另一优点就是可以将图像以交错的形式呈现在网页上，即图像尚未下载完成时就以马赛克的形式显示图像雏形。
  2、JPEG格式
图像压缩格式：用于摄影和连续色调图像的高级格式，其中可包含数百万种颜色，JPEG可以通过压缩实现图片品质和图片大小的良好平衡。
  3、PNG格式
非破坏性的网页图像文件格式。它提供了将图像以最小格式压缩却不失真的技术，不仅具备了大部分GIF图像的优点，还支持48-bit的色彩，更快地交错显示，跨平台的亮度控制，更多的透明度设置。
4.2 插入图像：
插入图像的标记只有一个：img，img元素的相关属性：
属性 描述 属性 描述
src 图像的源文件 alt 图片加载存在问题时显示的文字
width 宽度 height 高度
border 边框 align 布局排列
vspace 垂直边距 hspace 水平边距
dynsrc 设定avi文件的播放 loopdelay 循环播放的时延
loop 设置循环播放 start 循环播放的方式
lowsrc 设定低分辨率图片 usemap 设定映像地图
1) src（用于指定图像的路径）
语法：<img src="图像所在路径"/>
说明：图像所在路径可以是相对路径（..查找上级目录）也可以是绝对路径，图像的地址可以是文件和http://关键字作为地址，并且能够在网页上载入的图像。
只包含属性，没有闭合标签。
2) alt（图像的提示文字）
作用：
1、图像下载完成，鼠标指针放在该图像上会显示提示文字
2、图像没有被下载，图像位置上会提示文字
3、在浏览器无法载入图像时，替换文本属性告诉读者他们失去的信息。
语法：<img src="图像文件的地址" alt="提示文字的内容" >
说明：提示文字可中文可英文
3) width、height（图像的高度宽度）
语法：<img src="图像文件的地址" width="图像的宽度" height="图像的高度">
说明：高度宽度值必须是像素，无论现实的宽度与高度多么小，图片的大小还是不会变。
4) border（图像的边界）
语法：<img src="图像文件的地址" border="图像的宽度值">
说明：单位是像素值，值越大就越宽，默认情况下图像没有边框。边框的宽度可以变化，但是颜色不可以变化，默认为深蓝色。
5) vspace（垂直边距）、hspace（水平边距）
语法：<img src="图像文件的地址" vspace="像素值" hspace="像素值">
说明：单位是像素，vspace会在图像底部顶部加入空格，hspace会在左侧右侧加入空格。
6) 图像的排列align
语法：<img src="图像文件的地址" align="文字对齐方式">
说明：对齐方式分绝对对齐和相对。
属性 描述 属性 描述
bottom 图片底部与文字底部对齐 top 图片顶部与文字顶部对齐
middle 图片中线与文字中线对齐 center 图片中线与文字中线对齐
left 左对齐 right 右对齐
4.3 图像的超链接
图像也可以设置超链接，并且不同的地区可以链接到不同的文档，称为热区连接。
1) 图像的超链接
图像的超链接只需要将图片放在<a></a>之间即可。
语法：<a href="链接地址"><img src="#"></a>
说明：href参数用来设置图片的链接地址。
2) 图像的热区链接，图像不同地区链接不同文档，映射地图。
语法：首先在图像中设置映射地图的名称，在图像属性中使用usemap要引入影像地图的名称：
<img src="图像地址" usemap="映像图像名称">
然后需要定义热像图像的区域以及链接：
<map name="映像图像名称">
<area shape="热区形状" coords="热区坐标" href="热区连接">
说明：
首先要定义热区图像的名称，再引用。在<area>标记中定义热区的位置与链接，其中shape定义形状，coords定义区域坐标。
示例代码：
<img src="D:/workspace/web/MyTest/res/drawable/test.jpg" usemap="#Map">
<map name="Map">
<!--矩形区域-->
<area shape="rect" coords="242,42(起始坐标),337,74(结束坐标)" href="1.html">
<!---圆形区域-->
<area shape="circle" coords="150,150(圆心坐标),40" href="2.html">
<!--多边形区域-->
<area shape="poly" coords="120,120,170,130,240,160,210,200,140,200,90,150"
href="3.html">
其中每两个对应单点坐标
</map>


Html包含3种列表：有序列表、无序列表、定义列表。
定义列表：一组带有特殊含义的列表，一个列表项包含条件和说明两部分，可对列表进行灵活的定义。
有序列表：元素是有序排列的列表，项目列表由数字、字母、罗马数字排序
无序列表：元素是无序排列的列表，项目列表由几个符号组成。
  5.1 有序列表<ol>
将每个元素按照字母或者数字进行排序，以打开和关闭<ol>为标识，每个列表元素前用标识<li>标识，结束标识为</li>。
有序列表ol，项目有先后顺序，一般以数字或字母为顺序号。
语法：
<ol>
<li>有序列表项</li>
......
</ol>
说明：<ol>和</ol>标识着有序列表的开始和结束，<li>和</li>表示这是一个列表项。
列表编号类型type
包含大小写字母、大小写罗马数字、数字
语法：
<ol type="序号类型">
<li>有序列表项</li>
......
</ol>
type 列表项目的序号类型 type 列表项目的序号类型
1 数字1、2、3...... a 小写字母abcd......
A 大写字母ABCD...... i 小写罗马字母i、ii
I 大写罗马字母I、II  
type属性仅仅适合有序和无序列表，并不适用目录列表、自定义项和菜单列表
有序列表的开始值start：
语法：
<ol start="开始序号类型">
<li>有序列表项</li>
......
</ol>
说明：开始序号值只能是数字但可以对罗马数字和字母起作用。
5.2 无序列表<ul>
元素之间无序排列，以打开和关闭<ul>为标识，每个列表元素前用标识<li>标识，结束标识为</li>。
无序列表ul，项目无先后顺序，以符号作为标识。
语法：
<ul>
<li>有序列表项</li>
......
</ul>
说明：<ul>和</ul>标识着有序列表的开始和结束，<li>和</li>表示这是一个列表项。
列表编号类型type
包含方框、黑色圆点、圆圈
语法：
<ul type="序号类型">
<li>无序列表项</li>
......
</ul>
type 列表项目的序号类型 type 列表项目的序号类型
disc 默认为黑色圆点 circle 空心圆环
square 大写字母ABCD......  
type属性仅仅适合有序和无序列表，并不适用目录列表、自定义项和菜单列表
5.3 目录列表<dir>（已经弃用）
创建多列的目录列表，显示效果与无序列表相同，以打开和关闭<dir>为标识，每个列表元素前用标识<li>标识，结束标识为</li>。
语法：
<dir>
<li>目录列表项</li>
......
</dir>
5.4 定义列表<dl>
由两部分组成：定义条件和定义描述。<dt>用来指定需要描述的词语，<dd>是具体的解释。
语法:
<dl>
<dt>定义条件</dt>
<dd>定义描述</dd>
</dl>
自定义列表之外使用dd标记来增进缩进文本非常有用
5.5 菜单标记<menu>（已经弃用）
主要用于设计单列的菜单列表，显示效果与无序相同，功能可通过无序列表实现。
语法：
<menu>
<li>列表项</li>
......
</menu>



用于排列数据：使数据有规则显示。
1. 创建表格
  1.1 表格的基本构成：
table：表格标记
tr：行标记、表格的水平间距
td：单元格标记、表格行和列交替产生的区域。
表格以<table>开始，以</table>结束。
语法：
<table>
<tr>
<td>第一行第一列内容</td>
......
</tr>
......
</table>
说明：
<table>表格的开始
<tr>行的开始
<td>单元格的开始
在网页制作时，一般使用表格排列数据。  
  1.2 表格的标题：
<caption>可以用来设置表格的标题，一般放在表格的第一行，一个表格只包含一个标题
语法：
<caption>表格标题</caption>
   1.3 表头th
本质是td的一种变体，一般位于第一行，默认字体粗体居中显示
语法：
<tr>
<th>单元格里的内容</th>
......
</tr>
说明：
必须有开始标记，结尾可选
2. 表格的基本属性
  2.1 表格宽度与高度
宽度（width）、高度（height），默认情况下浏览器会根据表格里的内容调整宽度与高度值
语法：
<table width="宽度值" height="高度值">
......
</table>
说明：
宽度高度的值可以是像素值也可以是比例
  2.2 表格对齐方式
可以通过align设置表格的对齐方式
语法：
<table align="对齐方式">
说明：
align取值如下
属性值 说明
center 整个表格在浏览器界面上居中对齐
left 整个表格在浏览器界面上左对齐
right 整个表格在浏览器界面上右对齐
3、表格的边框
  3.1 表格边框宽度border
默认不指定border时无边框
语法：
<table border="边框像素值"></table>
说明：
只有border设置不为零才能显示出边框，为了相对美观，一般不会让表格宽度超过5像素。
  3.2 边框颜色bordercolor
默认是灰色，可以修改bordercolor修改边框颜色，颜色值为十六进制，边框不为零才能修改
语法：
<table border="边框值" bordercolor="边框颜色"></table>
  3.3 内框宽度cellspacing
用于设定表格每个内部单元格的间距
语法：
<table cellspacing="内部宽度">
说明：
宽度主要是像素值。
  3.4 文字与边框间距cellpadding
语法：
<table cellpadding="距离像素值"></table>
说明：
以像素值为单位，在制作网页时对表格边框进行相应的设置，可以容易制作出一些细线的表格。
4.表格背景
  4.1 表格背景颜色bgcolor
语法：<table bgcolor="十六进制颜色"></table>
说明：针对整个表格，可以被行列颜色代替
  4.2 表格背景图片background
语法：<table background="图像的地址"></table>
说明：地址可以是绝对地址，也可以是相对地址。
5、表格的行属性<tr>
  5.1 宽度高度控制
语法：<tr height="高度像素值" width="宽度像素值"></tr>
  5.2 行边框颜色：
语法：<tr bordercolor="十六进制颜色值"></tr>
  5.3 行背景bgcolor、background
语法：<tr bgcolor="十六进制颜色值" background="图像的地址"></tr>
说明：默认为透明，与网页背景保持一致。
  5.4 行属性的对齐方式：垂直对齐valign、水平对齐align
语法：<tr valign="垂直对齐布局" align="水平对齐布局"></tr>
说明：可以被单元格取代，valign属性有（top、middle、bottom），align属性有（left、center、right） 
6、单元格的行属性<td>
  6.1 宽度高度控制
语法：<td height="高度像素值" width="宽度像素值"></td>
  6.2 单元格边框颜色：
语法：<td bordercolor="十六进制颜色值"></td>
  6.3 单元格背景bgcolor、background
语法：<td bgcolor="十六进制颜色值" background="图像的地址"></td>
说明：默认为透明，与网页背景保持一致。
  6.4 单元格属性的对齐方式：垂直对齐valign、水平对齐align
语法：<td valign="垂直对齐布局" align="水平对齐布局"></td>
说明：valign属性有（top、middle、bottom），align属性有（left、center、right） 
  6.5 单元格垂直水平跨度：水平colspan、垂直跨度rowspan
将几个单元格合并在一起
语法：<td colspan="跨度的列数" rowspan="跨度的行数"></td>
  6.6 单元格的亮边框颜色bordercolorlight、暗边框颜色bordercolordark
语法：<td bordercolorlight="十六进制颜色代码" bordercolordark="十六进制颜色代码"></td>
7、表格的结构
表示表格结构的，包含表首标记<tread>、表主体标记<tbody>、表尾标记<tfoot>，通过这个成对的标记，应用到整体规划表格的行列属性，实现对多列的修改，修改颜色、对齐方式。
语法：
表首：
<thead bgcolor="" align="" valign="">
......
</thead>
说明：可包含<td>、<tr>、<th>等属性，一个表中只能包含一个<thead>标记
表主体：
<tbody bgcolor="" align="" valign="">
......
</tbody>
说明：一个表中只能包含一个<tbody>标记
表尾：
<tfoot bgcolor="" align="" valign="">
......
</tfoot>
说明：一个表中只能包含一个<tfoot>标记

附录：
1、实现两列合并：

<tr>
<td rowspan="2">类别：</td>
<td>925银饰</td>
</tr>
<tr>
<td>银链手镯</td>
</tr>
2、table中属性frame，用于控制围绕表格的边框，具体取值如下：
box 四周都有边框
above 最上面的边框
below 最下面的边框
vsides 上下水平标线
hsides 两侧垂直标线




网页与网页之间都是通过链接相互关联的，可以在文字、图片等任意位置添加超链接。
超链接主要有：外部链接、锚链接、电子邮件链接、空链接、脚本链接
1、基础知识：
  1.1 绝对路径
包括服务器规范在内的完整路径，不管在什么位置都可以非常精确的找到。
优点：与链接的源端点无关，希望连接到同站点的其他内容，必须使用绝对路径。
缺点：不利于测试，必选在Internet服务端进行测试、可移植性差
  1.2 相对路径
描述了源端点同目标端点相对位置，与源端点的位置密切相关
如果源端点和目标端点在同一目录下，只需要指定目标端点的文件名即可；
如果源端点与目标端点不在同一目录下，只需要将目录的相对关系描述出来就可以；
如果目标链接在源端点的子目录下，可以直接输入目录名称和子目录名称；
如果不在子目录下，可以使用..查找上级目录，从而构建出相对位置。
好处：文档结构不变就不会出现问题，移植时不需要修改路径。




2、内部链接：
   2.1 与自身网站内容有关的成为内部链接
语法：
<a href="链接地址">....</a>
   2.2 链接的目标窗口
语法：
<a href="链接地址" target="目标窗口的打开方式">.....</a>
说明：
target有以下种定义方式。
属性 含义 属性 含义
_self 在当前页面打开新链接 _blank 全新窗口打开新链接
_top 在顶层框架打开新连接 _parent 在框架的上一层打开新连接
framename 框架中使用，目标框架发生变化  
3、锚点链接：
  使用步骤：
1）在目标链接前定义锚点的属性
语法：<a name="锚点的名称"></a>
说明：锚点名称可以是数字、可以是英文，也可以是二者的结合，要区分大小写，一个页面可以有多个锚点。但是锚点名称不可相同。
2）新建链接指向锚点，可链接到不同位置。
当前页面语法：<a href="#锚点名称">....</a>
其他页面语法：<a href="链接文件地址#锚点名称">....</a>
说明：锚链接适合内容庞大繁琐的网页，可以快速定义到网页的特定位置
3）锚点链接在框架结构中的使用：
1. 搭建框架集frameset
2. 在指定目标界面的框架frame中添加锚点，<a name="锚点名称"></a>，假设目标frame的name属性为right。
3. 在源端点中添加跳转<a href="right.html#锚点名称" target="right(目标框架的name属性)">
4、外部链接
外部连接是指跳转到网站以外的资源
  4.1 链接到外部网站
语法：
<a href="http://外部网址">....</a>
说明：这是关于HTTP协议的外部链接，只需要存放对应的地址即可。
  4.2 链接到emali
语法：
<a href="mailto:邮件地址"></a>
说明：在网上创建email可以使用户快速返回自己的意见，email地址由超链接自动更新。一般放在页面底部。
  4.3 链接到FTP
一个FTP站点通常包含一些容易上传和下载的文件目录，大部分FTP网站需要用户名和密码。
语法：<a href="ftp://ftp地址"></a>
说明：ftp://表明这是一个关于FTP协议的外部协议，在其后输入网站即可。
  4.4 链接到Telnet
Telnet常用来登录一些BBS网站，也是一种远程登录方式。
语法：<a href="telnet://telnet地址"></a>
  4.5 下载文件
在网站中提供下载资料，要为文件提供下载链接。
语法：<a href="文件地址">......</a>
说明：在文件地址附近设置文件路径，可以是相对地址也可是绝对地址，如果不是html文件而是zip、MP3、exe文件，点击链接就可以下载文件。




8.1 设置滚动效果
网页的多媒体一般包含动态文字、动态图像、声音、动画等。
  8.1.1 滚动标记marquee
语法：
<marquee>......</marquee>
说明：marquee不仅可以移动文字，还可以移动图片表格等，只需要在标记之间添加要滚动的内 容，还可以设置文字或图像的属性。
   8.1.2 滚动的方向direction
语法：
<marquee direction="设置滚动的方向">......</marquee>
说明：
滚动的方向等属性可以设置如下，默认效果即为向左
属性 效果 属性 效果
left 向左滚动 right 向右滚动
up 向上滚动 down 向下滚动
滚动效果一般用于滚动公告栏和新闻动态等方面。
  8.1.3 滚动的方式behavior
语法：
<marquee direction="滚动方向" behavior="滚动方式"></marquee>
说明：常用属性
behavior 滚动效果
scroll 循环滚动，默认效果
slide 只滚动一次就停止
alternate 来回交替进行滚动
  8.1.4 滚动速度scrollamount(可以设置滚动的快慢)
语法：
<marquee scrollamount="滚动的速度">......</marquee>
说明：滚动的速度实际是每次滚动的长度，以像素为单位。
  8.1.5 滚动的时延scrolldelay
语法：
<marquee scrolldelay="时间间隔">.......</marquee>
说明：滚动时延的单位为毫秒
  8.1.6 循环的次数loop
语法：
<marquee loop="循环次数"></marquee>
  8.1.7 循环的范围，即循环区域的大小，默认和字体或图片所在区域大小一致
语法：
<marquee width="宽度像素值" height="高度像素值"></marquee>
说明：
值的设定均为像素
  8.1.8 循环背景颜色bgcolor
语法：
<marquee bgcolor="背景颜色"></marquee>
  8.1.9 空白空间 vspace、hspace
默认情况下，滚动对象和周围文字或者图片是紧密连接的，使用hspace或者vspace可以设置他们的空白空间。
语法：
<marquee hspace="水平范围" vspace="垂直范围"></marquee>

8.2 插入多媒体文件
  8.2.1 插入多媒体文件（flash动画.awf、音频、视频）
语法：
<embed src="多媒体文件地址" width="多媒体的宽度" height="多媒体的高度"></embed>
最常用的多媒体格式就是flash动画，占用空间小且可美化网页
  8.2.2 背景音乐bgsound、循环次数loop
语法：
<embed src="多媒体文件地址" loop="循环次数">
说明：
背景音乐文件可以是.mp3、.avi等声音文件，如果要实现重复循环，可以设置循环次数为true
PS：
背景音乐的效果可以用
<embed src="" hidden="true"></enbed>代替
  8.2.3 Java Applet
这是一种允许开发并且可以嵌入web页面的编程语言，可以嵌入网页执行一定的任务。
语法：
<applet code="Lake.class" width="宽度" height="高度">
<param name="文件名称" value="图片名称">
</applet>
说明：
使用Java Applet可以实现图形绘制、字体颜色控制、动画声音的插入、人机交互以及网页交流等功能。
 


框架可以在一个浏览器窗口中显示多个文档，框架可以广泛地用到网站导航和文档浏览器中。
框架一般包含框架集和框架组成，框架集就相当于一个大容器，包含所有的框架，是框架的集合，框架是一个独立的区域，用于单独显示一个网站。
9.1 框架的基本概念
框架是浏览器窗口的一个区域，它可以显示与浏览器窗口的其余部分显示内容无关的HTML文档。
框架集是一个HTML文件，它定义了一组框架的布局和属性，包含框架的数目、框架的大小和位置，以及在每个框架上所显示网页的URL，框架集文件本身不包含所需要在网页上显示的内容，但是noframes除外。框架集只需要向浏览器提供应该如何显示一组框架，以及在这组框架中应该显示那些信息。
框架结构显示如何将两个或两个以上的网页组合起来，框架把一个网页分为单独的几部分，每部分是一个单独的html，最常见的用途是导航。

9.2 设置框架集属性frameset
页面结构是在框架集里面设置的，可以根据分割方式分为：水平分割窗口、垂直分割窗口、嵌套分割窗口。
    1）rows水平分割窗口
语法：
<frameset rows="框架窗口的高度,框架窗口的高度">
<frame .......>
<frame .......>
......
</frameset>
说明：水平分割窗口可以取多个值，它们是由逗号分割的像素值或者百分比。
    2）cols垂直分割窗口
语法：
<frameset cols="框架窗口的宽度，框架窗口的宽度">
<frame .......>
........
</frameset>
说明：
cols中可以取多个值，可以是逗号分割的像素值或者百分比。
    3）嵌套分割窗口
就是在一个页面里面既有水平分割的框架，又有垂直分割的框架
语法：
<frameset rows="框架窗口的高度,框架窗口的高度,..." cols="*">
<frame .......>
<frameset cols="框架窗口的宽度,框架窗口的宽度">
</frameset>
</frameset>
     4）框架的边框frameborder
默认情况下，浏览器会为框架提供边框，可以通过frameborder控制边框的显示与隐藏
语法：
<frameset frameborder="是否显示">
说明：
frameboder只能取值"0","1","yes","no"，取值为"1"或者"yes"时边框显示，取值为"0"或者"no" 时边框隐藏。当设置在frameset时，对整个框架集有效，当设置在frame时，对当前框架有效。
      5）边框宽度framespacing
默认情况下边框宽度为1，可以通过framespacing设置边框的宽度
语法：
<frameset framespacing="边框宽度">
说明：
边框宽度就是框架边框之间线条之间的线条宽度，以像素为单位，只能对框架集使用。
6）边框颜色bordercolor
语法：
<frameset bordercolor="十六进制颜色">

校正：
框架边框的设定是通过border属性，frameborder属性控制有无边界即：<frame border="边框宽度" frameborder="no/0/yes/1">

9.3 设置框架属性frame
<frame>用来定义每一个单独的框架页面，框架界面属性都是在frame里面设置的    
     1）页面源文件src
语法：
<frame src="页面源文件地址">
说明：
指定文件可以是html文件，也可以是图片文件。地址可以是相对地址。
     2）页面名称name
语法：
为了便于页面链接和查找所提供的一个属性
<frame src="页面源文件地址" name="页面名称">
说明：
框架的页面名称中不可包含特殊字符、连字符、空格等，必须是单个单词或者字母的组合。
     3）禁止调整窗口的尺寸noresize
每个框架都有固定的宽度和高度，可以通过拖动边框进行调整，使用noresize属性可以禁止随意改变窗口尺寸。
语法：
<frame src="页面源文件地址" noresize="noresize">
说明：
noresize无属性，如果禁止调整宽度，添加该属性即可
     4）框架与页面内容的水平间距marginwidth、垂直间距marginheight
语法：
<frame src="页面源文件地址" marginwidth="水平间距" marginheight="垂直间距">
说明：
marginwidth设置的是页面的左右边缘与框架边框的间距
marginheight设置的是页面上下边缘与框架边框的间距
     5）控制框架的滚动条是否显示scrolling
当页面中的内容超过框架的尺寸时，默认情况下，浏览器的右侧或者下侧会显示一个滚动条。
语法：
<frame src="页面源文件地址" scrolling="是否显示滚动条">
说明：
scrolling的取值有三个：auto、yes、no，auto代表的是根据情况显示，是系统默认的显示方式，yes代表一直显示滚动条，no代表的是一直不显示。
     6）不支持框架标记noframes
当用户关闭了框架显示或者浏览器不支持框架显示，需要在noframes里面设置属性，告诉用户无法打开框架。
语法：
<noframes>替换显示的内容</noframes>
说明：
里面的内容就是不支持框架显示时显示的内容

9.4 浮动框架iframe
它是在浏览器窗口中嵌套的子窗口整个页面不一定是框架结构，但是要包含一个框架窗口。iframe可以完全由设计者定义宽度与高度，可以放在页面的任意位置。
     1）页面源文件src
语法：
<iframe src="浮动框架的源文件"></iframe>
     2）浮动框架的宽和高width、height
frameset生成的框架结构是依赖上层空间结构的，高度或者宽度必须有一个与上层结构相同。
语法：
<iframe src="浮动框架的源文件" width="浮动框架的宽" height="浮动框架的高"></iframe>
说明:
高度值宽度值都以像素为单位。
     3）浮动框架的对其方式align
用于设定框架相对于浏览器的水平位置。
语法：
<iframe src="浮动框架的源文件" align="对齐方式"></frame>
说明：
取值包含：左对齐left、右对齐right、居中对齐middle、底部对齐bottom
4）浮动框架的滚动方式scrolling
当页面中的内容超过框架的尺寸时，默认情况下，浏览器的右侧或者下侧会显示一个滚动条。
语法：
<iframe src="页面源文件地址" scrolling="是否显示滚动条"></iframe>
说明：
scrolling的取值有三个：auto、yes、no，auto代表的是根据情况显示，是系统默认的显示方式，yes代表一直显示滚动条，no代表的是一直不显示。

9.5 创建框架连接：
对于框架页面来说，设置框架连接需要用到target
  1、普通框架结构的链接
普通框架之间通过target互相链接起来，一般来说，一个页面会有一个界面作为导航页面。其中添加了对另一个页面的链接设定。



表单主要用于手机客户端提供的相关信息，使网页具有交互的功能。表单常用来进行会员注册、网上调查和搜索等。
1. 表单标记form
<form></form>标记对用来创建一个表单，即定义表单的开始和结束位置，在标记中的一切都属于表单的内容，在<form></form>对里面可以设置表单的基本属性，包含表单的名称、处理程序和处理方法，一般来说，表单的action方法和method方法是必不可少的方法。
  1.1 表单的提交action
action用于指定表单的提交地址。
语法：
<form action="表单的处理程序">......</form>
说明：
表单的处理程序是表单要提交的地址，也就是表单采集到的信息所要传递的地址，这个地址可以是绝对地址可以是相对地址，也可以是其他形式的地址。
  1.2 表单的名称name
name用于给表单命名，但是不是必须属性，为了避免混乱最好给表单起名。
语法：
<form name="表单名称">......</form>
说明：
不能包含特殊字符和空格
  1.3 表单的上传方法method
指定表单上传时使用哪种HTTP请求方式，可以取值get或post。
get：表单数据被传递到action所指定的URL，然后这个新URL被送到被处理程序
post：表单数据被包含在表单主体，然后被送到处理程序上。
语法：
<form method="get|post"></form>
说明：
传递的方法只能是get或者post。
  1.4 表单的编码方式enctype
表单的编码方式enctype用于设定表单提交时的编码方式
语法：
<form enctype="编码方式"></form>
说明：
表单定义了MIME编码方式，具体设定如下：
取值 取值的含义
application/x-www-form-urlencoded 默认的编码形式
mulitipart/form-data MIME编码形式，上传文件时必须指定为该类型
  1.5 目标形式target
指定目标窗口的打开形式，目标窗口一般用于显示表单内容
语法：
<form target="目标窗口的打开形式"></form>
说明：
打开方式有四个选项：
_blank:	将内容载入到一个未命名的新浏览器窗口
_self:	载入到链接所在的框架或者同一窗口上
_top:	将内容载入到整个浏览器中
_parent:	将内容载入到含有该框架的框架集或者父窗口
    1.6 组合表单fieldset
<fieldset>元素组合表单的相关数据
<legend>元素为<fieldset>元素定义标题
属性 描述
accept-charset 规定在被提交的表单中使用的字符集
action 规定提交向何处提交表单的地址
autocomplete 规定浏览器应该自动保存表单
enctype 规定被提交数据的形式
method 规定提交表单所需要的http方法
name 规定识别表单的名称
novalidate 规定浏览器不验证表单
target 规定action属性中地址的目标
2. 插入表单对象
  2.1 文字字段text：
语法：
<input type="text" name="控件名称" value="默认值" size="长度" maxlength="最长字符数"/>
说明：
参数及定义：
参数类型 含义
type 指定表单的类型
name 可有英文、数字、下划线组成，指定表单的名称
value 指明表单的默认值
size 表单控件的大小
maxlength 最多可输入的字符数
 2.2 密码字段password：
语法：
<input type="password" name="名称" value="默认值" size="长度" maxlength="最长字符数"/>
说明：
参数及定义：
参数类型 含义
type 指定表单的类型
name 可有英文、数字、下划线组成，指定表单的名称
value 指明表单的默认值，以"*"显示
size 表单控件的大小
maxlength 最多可输入的字符数
2.3 单选框radio
小而圆的按钮，可以指定选中其中一个
语法：
<input type="radio" name="单选按钮名称" value="单选按钮的取值" checked/>
说明：
单选按钮必须设置value值，一个选择列表中的所有名称要设置相同，只有一个选择框可设置为checked。
  2.4 复选框checkbox
方框，可以指定选中其中一个或多个
语法：
<input type="checkbox" name="复选框名称" value="复选框的取值" checked/>
说明：
checked表示默认选中
  2.5 按钮button
一般要配合脚本进行表单处理
语法：
<input type="button" name="按钮名称" value="按钮的取值" onclick="处理程序"/>
说明：
value为显示的文字，所处理的事件要加在onclick上实现一定的功能，如关闭页面为window.close()
  2.6 提交按钮submit
语法：
<input type="submit" name="按钮名称" value="按钮的取值"/>
说明：
value为显示的文字
2.7 重置按钮reset
语法：
<input type="reset" name="按钮名称" value="按钮的取值"/>
说明：
value为显示的文字
2.8 隐藏功能hidden
语法：
<input type="hidden" name="隐藏域名称" value="隐藏域的取值"/>
说明：
value为隐藏域的取值
2.9 图像显示域image
语法：
<input type="image" name="图像名称" src="源文件地址"/>
说明：
地址可以是相对地址也可是绝对地址
  2.10 文件域file
语法
<input type="file" name="文件域名称" size="文件域长度" maxlength="最大字符长度"/>

type 含义 用法
number 范围数字选择 <input type="number" name="pick" min="1" max="5"/>
date 输入日期 <input type="date name="birth" min="1989-12-31" max="2099-12-31"/>(限定范围日期)
color 颜色选择 <input type="color" name="setColor"/>
range 滑块显示范围数据 <input type="range" name="points" min="0" max="10">
month 月份和年份 <input type="month" name="bdaymonth">
week 年份和周数 <input type="week" name="week_year">
time 时间类型 <input type="time" name="usr_time">
email 邮箱格式约束 <input type="email" name="email">
tel 手机号格式 <input type="tel" name="tel">
url URL格式 <input type="url" name="url">

输入属性约束：
属性 说明
size 输入内容的多少
max 输入内容的最大值
maxlength 输入字段的最大字符串
min 输入字段的最小值
readonly 规定输入字段是只读模式
disabled 输入字段被禁用
required 规定字段为必选项
pattern 输入内容要有正则表达式约束
value 设置默认值
step 输入字段的合法数字间隔
HTML5设置了以下属性
属性 说明 注意
autocomplete 在输入框(text、search、url、tel、email、color)这些可以自动填充，规定表单或输入字段是否应该自动完成 on：会自动填充off：不会自动填充
novalidate 设置novalidate属性在表单提交时不会对表单进行验证 用于<form>标签
autofocus 设置了autofocus会在input使用时自动完成聚焦 用于<input>标签
form form 属性规定 <input> 元素所属的一个或多个表单 
action action 属性规定当提交表单时处理该输入控件的文件的 URL 用于<form>标签
enctype 规定当把表单数据（form-data）提交至服务器时如何对其进行编码（仅针对 method="post" 的表单） 默认：application/x-www-form-urlencoded文件：mulitipart/data-form
method 定义用以向 action URL 发送表单数据（form-data）的 HTTP 方法 取值为get或post用于<form>标签
target 规定的名称或关键词指示提交表单后在何处显示接收到的响应 用于<form>标签
list 引用的 <datalist> 元素中包含了 <input> 元素的预定义选项 
multiple  如果设置，则规定允许用户在 <input> 元素中输入一个以上的值 适用于以下输入类型：email 和 file
placeholder  规定用以描述输入字段预期值的提示（样本值或有关格式的简短描述） 适用于以下输入类型：text、search、url、tel、email 以及 password

3. 菜单和列表
都是通过<select>加<option>实现，可用来节省页面空间，存储较多选择项  
  3.1 下拉菜单
正常只显示一个选择项，下拉显示全部
语法：
<select name="下拉菜单名称">
<option value="选项值" selected>选项显示内容</option>
<option value="选项值">选项显示内容</option>
......
</select>
说明：
选项值是提交表单的值，选项内容才是对应的在界面显示的内容，selected表示默认情况下是选中的，一个下拉菜单只能默认选中一个。
  3.2  列表项
在列表项中可以显示几条信息，超出这个信息量需要拖动滚动条
语法：
<select name="列表项名称" size="显示的数目" mutiple>
<option value="选项值" selected>选项显示内容</option>
<option value="选项值">选项显示内容</option>
......
</select>
3.3 定义控件的预选内容datalist
示例：
<input list="browsers"/>
<datalist id="browsers">
<option value="Safari"/>
......
</datalist>
4. 文本域textarea
输入内容较多时使用，使用的时textarea标记而不是input
语法：
<textarea name="文本框区域" cols="行数" rows="列数"></textarea>
说明：
不能用value声明初始值，应该在textarea标签中定义要显示的内容
  5. id标记
id标识是一个比较特殊的标记，它主要用于标识一个唯一的元素，可以是文字，可以是密码域，也可以是其他表单元素
语法：
<id="元素的标记名">
说明：
这是元素的唯一标识，最好根据属性命名



一种具有HTML与XML特性的语言
11.1 XHTML简介
可拓展超文本标记语言(Extensible HyperText Markup Language)，XHTML技术是一种过渡技术，结合了部分XML与HTML的简单特性。
目前HTML不能很好地支持不断更新的显示媒体。
具有以下优点：
  1）提倡使用更加简洁和规范的的代码
  2）在旧的基于HTML的浏览器与新的基于XHTML的浏览器中的显示一样出色
  3）可扩展性语言，既能使用HTML对象模型（DOM）又可以使用css对象模型
  4）推荐使用css对页面进行布局，分离了页面结构与表现。
  5）XML是web发展的趋势，具有很好的向后兼容性。
  6）HTML会慢慢被XHTML取代，XHTML出现的目的是代替HTML
  7）XHTML中DTD定义了强制使用的HTML元素
11.2 XHTML页面结构
  1、文档类型声明：
由<!DOCTYPE>定义，在代码的前两行，显示器中不会显示。
语法：
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 TRansition//EN"
"http://www.w3.org/TR/xhtml//DTD/htmll-transitional.dtd>
  2、<html>元素与名字空间
<html>标签是文档中必须使用的元素，所有的文档内容，文档的主体都要包含在<html></html>之间
语法：
<html xmln="http://www.w3.org/1999/xhtml">
  3、网页头部元素head
其中包含meta、title等信息
  4、网页主体元素body
页面信息主要是通过页面主体来传递，可包含所有的页面信息
11.3 XHTML语法规范
  1、必须是完全嵌套的
XHTML语法必须完全嵌套，HTML不然。
  2、XHTML必须格式规范
  3、标签名必须小写
  4、所有的XHTML必须有始有终，所有元素必须关闭，空元素也是（<br/> | <hr/>等）
  5、用id代替name
  6、DOCTYPE声明不可少
  7、属性必须加英文双引号
  8、明确所有属性值
  9、禁止使用简写  
eg:
<input type="radio" name="radio" value="v" checked/> 不推荐
<input type="radio" name="radio" value="v" checked="checked"/> 推荐
  10、XHTML必须使用根元素(<html>)

11.4 附加 
1. 哪个属性可替代下列元素的 name 属性： a、applet、frame、iframe、img 以及 map ？
id属性
2. 语言属性（lang）
它定义了元素内部内容所使用的语言类型。
如果某个元素定义使用了lang属性，必须使用xml:lang，如下：
<div lang="no" xml:lang="no">Hello</div>
3. HTML DTD
HTML定义了三种文件类型，最常用的是XHTML Transitional
4.  <!DOCTYPE>使用是必须的
一个XHTML有三个部分
- DOCTYPE
- head
- body
DTD规定了使用通用标记语言的网页语法。
诸如 HTML 这样的通用标记语言应该使用 DTD 来规定应用于某种特定文档中的标签的规则，这些规则包括一系列的元素和实体的声明。
存在三种DTD文档格式：
Transitional（过渡类型），这个类型最为普遍
Strict（严格类型）
Frameset（框架类型）
5. HTML1.0定义了三种文件类型，对应了相应的DTD
   5.1 XHTML1.0 Strict
<!DOCTYPE html
		PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
Strict在此情况下使用：
需要干净的标记，避免表现上的混乱。与层叠样式表配合使用
   5.2 XHTML1.0 Transitional
<!DOCTYPE html
		PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
Transactional在此情况下使用：
需要利用HTML表现特性上，或者不支持层叠样式表的浏览器编写XHTML时
   5.3 XHTML1.0 Frameset
<!DOCTYPE html
		PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
Frameset在下述情况下使用：
需要使用HTML框架将网页界面分为两个或以上的界面时。
6. XHTML模块
XHTML 是简单而庞大的语言。XHTML 包含了网站开发者需要的大多数功能。
对于某些特殊的用途，XHTML 太大且太复杂，而对于其他的用途，它又太简单了。
通过将 XHTML 分为若干模块，W3C 已经创造出数套小巧且定义良好的 XHTML 元素，这些元素既可被独立应用于简易设备，又可以与其他 XML 标准并入大型且更复杂的应用程序。
XHTML将分为28种模型：
模块名称 描述
Applet Module(Applet模块) 已经废弃的applet模块
Base Module(基本模块) 定义基本的元素
Base Form Module(基础表单模块) 定义基本的表单模块
Base Table Module(基础表格模块) 定义基本的表格模块
Bi-direction Text Module(双向文本模块) 定义bdo元素
Client Image Map Module(客户端图像映射模块) 定义浏览器图像映像格式
Edit Module (编辑模块)	 定义编辑元素删除和插入
Forms Module (表单模块)	 定义所有在表单中使用的元素。
Frames Module (框架模块)	 定义frameset元素。
Hypertext Module (超文本模块)	 定义a元素
Iframe Module (内联框架模块)	 定义iframe元素
Image Module (图像模块)	 定义img元素
Intrinsic Events Module ()	 定义事件属性 (event)，比如onblur和onchange
Legacy Module (遗留模块)	 定义被废弃的元素和属性。
Link Module (链接模块)	 定义link元素
List Module (列表模块)	 定义ol、ul、li、dl、dt、dd等
Metainformation Module (元信息模块) 定义meta元素
Name Identification Module (名称识别模块)	 定义已经被废弃的name属性
Object Module (对象模块)	 定义对象元素 (object)和param元素。
Presentation Module (表现模块)	 定义表现元素i和b
Scripting Module (脚本模块)	 定义脚本元素(script)和无脚本元素(noscript)
Server Image Map Module(服务器端图像映射模块)	 定义服务器端图像映射(server side image map)元素
Structure Module (结构模块)	 定义以下元素：html、head、body和title
Style Attribute Module (样式属性模块)	 定义样式属性
Style Sheet Module (样式表模块)	 定义样式元素
Tables Module (表格模块)	 定义表格的元素
Target Module (Target模块)	 定义target属性
Text Module (文本模块)	 定义文本容器元素 (text container)，比如p和h1
7、HTML标准属性
核心属性
属性 值 描述
class class_rue或style_rule 元素的类
id id_name 元素特定的id
style 样式定义 内联样式定义
title 提示文本 显示用于提示的文本
语言属性
属性 值 描述
dir ltr | rtl 设置文本的方向
lang 语言代码 定义语言类型
8、HTML事件属性
窗口事件（仅在body和framset使用）
属性 值 描述
onload 脚本 当文档载入时执行脚本
onunload 脚本 当文档卸载时执行脚本
表单元素事件（仅在表单使用）
属性 值 描述
onchange 脚本 元素改变时执行脚本
onsubmit 脚本 表单提交时执行脚本
onselect 脚本 当表单被选择时执行脚本
onreset 脚本 当表单被重置时执行脚本
onblur 脚本 当元素失去焦点时执行脚本
onfocus 脚本 当表单实现聚焦时执行脚本
键盘事件
在下列元素中无效：base, bdo, br, frame, frameset, head, html, iframe, meta, param, script, style, 以及 title 元素。
属性 值 描述
onkeydown 脚本 当键盘被按下时执行脚本
onkeypress 脚本 当键盘被按下然后松开执行脚本
onkeyup 脚本 当键盘被松开执行脚本
鼠标事件
在下列元素中无效：base, bdo, br, frame, frameset, head, html, iframe, meta, param, script, style, title 元素。
属性 值 描述
onclick 脚本 鼠标单击时执行脚本
ondbclick 脚本 鼠标双击时执行脚本
onmousedown 脚本 鼠标被按下时时执行脚本
onmousemove 脚本 鼠标移动时执行脚本
onmouseout 脚本 鼠标从元素移走时执行脚本
onmouseover 脚本 鼠标放在某个元素上时执行脚本
onmouseup 脚本 鼠标被松开时执行脚本

9、附加说明：
1） id和class
在一个HTML页面中，id出现一次，class可出现多次，在页面中只有一个搜索表单，所以我们选择 id 标注这个唯一的组件。但是 blog 则拥有许多的（文章）入口，所以 class 属性被应用于这种情况。同样地，新闻站点通常拥有多个 div，这些 div 的 class 可以命名为 "newsitem" 或者别的什么。
2） id的功能
作为样式表选择器，使我们有能力创作紧凑的最小化的 XHTML。
作为超文本的目标锚，取代过时的 name 属性。
作为从基于 DOM 的脚本来定位特定元素的方法。
作为对象元素的名称。
作为一种综合用途处理 (general purpose processing) 的工具（在 W3C 的例子中，“当把数据从HTML页面中提取到数据库，或将 HTML 文档转换为其他格式等情况下，作为域识别工具来使用。”）



